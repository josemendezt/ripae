// Generated by ts-to-zod
import { z } from 'zod';
import { PaymentFrequency, CanadianProvinces } from './type';

export const signUpFlowSchema = z.union([
  z.literal('lenderPersonal'),
  z.literal('lenderFinancial'),
  z.literal('lenderPreferences'),
  z.literal('lenderCompliance'),
  z.literal('lenderVerification'),
  z.literal('lenderDashboard'),
  z.literal('borrowerPersonal'),
  z.literal('borrowerFinancial'),
  z.literal('borrowerEmployment'),
  z.literal('borrowerLoan'),
  z.literal('borrowerDashboard'),
]);

export const paymentFrequencySchema = z.nativeEnum(PaymentFrequency);

export const canadianProvincesSchema =
  z.nativeEnum(CanadianProvinces);

export const userSchema = z.object({
  id: z.string(),
  created_at: z.union([z.date(), z.string()]),
  first_name: z.string(),
  middle_name: z.string().optional(),
  last_name: z.string(),
  address: z.string(),
  dob: z.string(),
  email: z.string(),
  role: z.string(),
  sin: z.string(),
  job: z.string(),
  province: z.string(),
  postal_code: z.string(),
  city: z.string(),
  job_time: z.number(),
  signup_flow: signUpFlowSchema,
});

export const personalInfoSchema = z.object({
  first_name: z.string().min(1, {
    message: 'Please type your first name',
  }),
  middle_name: z.string().optional(),
  phone: z.string().min(6, {
    message: 'Please type a valid phone number',
  }),
  last_name: z.string().min(1, {
    message: 'Please type your last name',
  }),
  address: z.string().min(1, {
    message: 'Please type your address',
  }),
  dob: z.union([
    z.date({
      required_error: 'Please select your date of birth',
    }),
    z.string({
      required_error: 'Please select your date of birth',
    }),
  ]),
  sin: z.string().min(1, {
    message: 'Please type your SIN',
  }),
  province: z.string().min(1, {
    message: 'Please select your province',
  }),
  postal_code: z.string().min(1, {
    message: 'Please type your postal code',
  }),
  city: z.string().min(1, {
    message: 'Please type your city',
  }),
});

export const employmentSchema = z.object({
  payment_frequency: z.enum(
    [
      PaymentFrequency.MONTHLY,
      PaymentFrequency.SEMIMONTHLY,
      PaymentFrequency.WEEKLY,
      PaymentFrequency.BIWEEKLY,
    ],
    {
      required_error: 'Please select your payment frequency',
    }
  ),
  income: z.union([
    z.string().min(1, {
      message: 'Please type the amount per payment you receive',
    }),
    z.number().min(1, {
      message: 'Please type the amount per payment you receive',
    }),
  ]),
  expenses: z.union([
    z.string().min(1, {
      message: 'Please type the amount for your monthly obligations',
    }),
    z.number().min(0, {
      message: 'Please type the amount for your monthly obligations',
    }),
  ]),
  job: z.union([
    z.string().min(1, {
      message: 'Please type your job',
    }),
    z.number().min(0, {
      message: 'Please type your job',
    }),
  ]),
  job_time: z.union([
    z.string().min(1, {
      message:
        'Please specify the time you have in your job (in months)',
    }),
    z.number().min(0, {
      message:
        'Please specify the time you have in your job (in months)',
    }),
  ]),
});

export const complianceSchema = z.object({
  politically_exposed: z.string({
    required_error: 'Please select yes or no',
  }),
});
